{"version":3,"sources":["./src/app/pages/nfc/nfc.page.html","./src/app/pages/nfc/nfc.module.ts","./src/app/pages/nfc/nfc.page.scss","./src/app/pages/nfc/nfc.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kSAAkS,YAAY,gQ;;;;;;;;;;;;;;;;;;;;;;;ACArQ;AACM;AACF;AACA;AACE;AAEV;AACoC;AAiBzE,IAAa,aAAa,GAA1B,MAAa,aAAa;CAAG;AAAhB,aAAa;IAfzB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC;gBACpB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,iDAAO;iBACnB;aACF,CAAC;YACF,iFAAU;SACX;QACD,YAAY,EAAE,CAAC,iDAAO,CAAC;KACxB,CAAC;GACW,aAAa,CAAG;AAAH;;;;;;;;;;;;ACxB1B,+DAA+D,uI;;;;;;;;;;;;;;;;;;;ACAb;AACN;AACH;AACzC,wEAAwE;AACxE,sEAAsE;AACtE,mCAAmC;AACnC,2BAA2B;AAC3B,qGAAqG;AACrG,wEAAwE;AACxE,4FAA4F;AAC5F,gGAAgG;AAChG,wEAAwE;AAOxE,IAAa,OAAO,GAApB,MAAa,OAAO;IAIlB,YAAoB,GAAQ,EAAU,OAAgB;QAAlC,QAAG,GAAH,GAAG,CAAK;QAAU,YAAO,GAAP,OAAO,CAAS;QACpD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;QAChC,CAAC,CAAC,CAAC;QACH,gBAAgB;QAChB,kBAAkB;QAClB,8BAA8B;QAC9B,yDAAyD;QACzD,uDAAuD;QACvD,gEAAgE;QAChE,gFAAgF;QAEhF,sBAAsB;QACtB,wBAAwB;QACxB,aAAa;QACb,iCAAiC;QACjC,0EAA0E;QAC1E,wCAAwC;QACxC,wCAAwC;QACxC,6FAA6F;QAC7F,kHAAkH;QAElH,qKAAqK;QACrK,6DAA6D;QAC7D,4CAA4C;QAC5C,4CAA4C;QAC5C,iGAAiG;QACjG,sHAAsH;QAEtH,oDAAoD;QACpD,gDAAgD;QAChD,gDAAgD;QAChD,qGAAqG;QACrG,0HAA0H;QAE1H,wDAAwD;QACxD,oDAAoD;QACpD,oDAAoD;QACpD,yGAAyG;QACzG,8HAA8H;QAE9H,4DAA4D;QAC5D,wDAAwD;QACxD,wDAAwD;QACxD,6GAA6G;QAC7G,kIAAkI;QAElI,gEAAgE;QAChE,4DAA4D;QAC5D,4DAA4D;QAC5D,iHAAiH;QACjH,sIAAsI;QACtI,iDAAiD;QACjD,sCAAsC;QACtC,kCAAkC;QAClC,8BAA8B;QAC9B,0BAA0B;QAC1B,sBAAsB;QACtB,kBAAkB;QAClB,cAAc;QACd,UAAU;QACV,OAAO;QACP,oBAAoB;QACpB,+BAA+B;QAC/B,+FAA+F;QAC/F,QAAQ;IACV,CAAC;IAEO,YAAY,CAAC,GAAG;QACtB,IAAI,MAAM,GAAI,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YACzC,QAAQ,IAAI,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACpE;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,QAAQ;IACR,CAAC;CAKF;;YAlF0B,yDAAG;YAAmB,sDAAO;;AAJ3C,OAAO;IALnB,+DAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,uIAA4B;;KAE7B,CAAC;2EAKyB,yDAAG,EAAmB,sDAAO;GAJ3C,OAAO,CAsFnB;AAtFmB","file":"pages-nfc-nfc-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      \\n    </ion-buttons>\\n    <ion-title>\\n      NFC Testing Page\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <h1 class=\\\"ion-margin\\\">\\n    NFC supported: {{nfcWorking}}\\n  </h1>\\n  <h4 id=\\\"nfc-tagId\\\" class=\\\"ion-margin\\\"></h4>\\n  <p id=\\\"nfc-result\\\" class=\\\"ion-margin\\\"></p>\\n  <p id=\\\"nfc-card-hex\\\" class=\\\"ion-margin\\\"></p>\\n  <p id=\\\"nfc-card-ascii\\\" class=\\\"ion-margin\\\"></p>\\n</ion-content>\\n<app-tabs></app-tabs>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { NFCPage } from './nfc.page';\nimport { TabsModule } from '../../components/tabs/tabs.component.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: NFCPage\n      }\n    ]),\n    TabsModule\n  ],\n  declarations: [NFCPage]\n})\nexport class NFCPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL25mYy9uZmMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NFC } from '@ionic-native/nfc/ngx';\nimport { Storage } from '@ionic/storage';\n// Using Ionic Native NFC for enabling NFC feature in the Ionic platform\n// To use the NFC feature in Android, 3rd party Cordova plugin is used\n// Plugin used: phonegap-nfc-isodep\n//    by: as-eldlc (GitHub)\n// As Ionic Native NFC by Ionic Team (Official) does not include feature to request data from NFC tag\n// which only detecting NFC tag and retrieve tag ID at the latest update\n// Has added some custom lines in .\\node_modules\\@ionic-native\\nfc\\ngx\\index.d.ts & index.js\n// To enable some functions such as connect(), transceive(), and close() which are not available\n// but callable in Cordova plugin for executing Android native functions\n\n@Component({\n  selector: 'app-nfc',\n  templateUrl: 'nfc.page.html',\n  styleUrls: ['nfc.page.scss']\n})\nexport class NFCPage implements OnInit {\n  public nfcWorking: boolean;\n  public nfcVal: any;\n\n  constructor(private nfc: NFC, private storage: Storage) {\n    storage.get('uid').then((val) => {\n    });\n    // nfc.enabled()\n    //   .then(() => {\n    //     this.nfcWorking = true;\n    //     nfc.addTagDiscoveredListener().subscribe(data => {\n    //       let tagId = nfc.bytesToHexString(data.tag.id);\n    //       document.getElementById('nfc-tagId').innerText = tagId;\n    //       document.getElementById('nfc-result').innerText = JSON.stringify(data);\n          \n    //       nfc.connect()\n    //         .then(() => {\n    //         })\n    //         .catch((response) => {\n    //           var readRequest = \"00A404000E325041592E5359532E444446303100\";\n    //           nfc.transceive(readRequest)\n    //             .then((responseData) => {\n    //               document.getElementById('nfc-card-hex').innerHTML += '<br/>' + responseData;\n    //               document.getElementById('nfc-card-ascii').innerHTML += '<br/>' + this.hex_to_ascii(responseData);\n                  \n    //               var aid = String(responseData).substring(String(responseData).lastIndexOf(\"4f07\") + 4, String(responseData).lastIndexOf(\"4f07\") + 18).toUpperCase();\n    //               var readRequest = \"00A4040007\" + aid + \"00\";\n    //               nfc.transceive(readRequest)\n    //                 .then((responseData) => {\n    //                   document.getElementById('nfc-card-hex').innerHTML += '<br/>' + responseData;\n    //                   document.getElementById('nfc-card-ascii').innerHTML += '<br/>' + this.hex_to_ascii(responseData);\n\n    //                   var readRequest = \"00B2010C00\";\n    //                   nfc.transceive(readRequest)\n    //                     .then((responseData) => {\n    //                       document.getElementById('nfc-card-hex').innerHTML += '<br/>' + responseData;\n    //                       document.getElementById('nfc-card-ascii').innerHTML += '<br/>' + this.hex_to_ascii(responseData);\n                          \n    //                       var readRequest = \"00B2020C00\";\n    //                       nfc.transceive(readRequest)\n    //                         .then((responseData) => {\n    //                           document.getElementById('nfc-card-hex').innerHTML += '<br/>' + responseData;\n    //                           document.getElementById('nfc-card-ascii').innerHTML += '<br/>' + this.hex_to_ascii(responseData);\n                              \n    //                           var readRequest = \"00B2011400\";\n    //                           nfc.transceive(readRequest)\n    //                             .then((responseData) => {\n    //                               document.getElementById('nfc-card-hex').innerHTML += '<br/>' + responseData;\n    //                               document.getElementById('nfc-card-ascii').innerHTML += '<br/>' + this.hex_to_ascii(responseData);\n                                  \n    //                               var readRequest = \"00B2021400\";\n    //                               nfc.transceive(readRequest)\n    //                                 .then((responseData) => {\n    //                                   document.getElementById('nfc-card-hex').innerHTML += '<br/>' + responseData;\n    //                                   document.getElementById('nfc-card-ascii').innerHTML += '<br/>' + this.hex_to_ascii(responseData);\n    //                                   nfc.close();\n    //                                 });\n    //                             });\n    //                         });\n    //                     });\n    //                 });\n    //             });\n    //         });\n    //     });\n    //   })\n    //   .catch(err => {\n    //     this.nfcWorking = false;\n    //     document.getElementById('nfc-result').innerText = \"NFC is not supported on this device\";\n    //   });\n  }\n\n  private hex_to_ascii(str) {\n    var hexStr  = str.toString();\n    var asciiStr = '';\n    for (var n = 0; n < hexStr.length; n += 2) {\n      asciiStr += String.fromCharCode(parseInt(hexStr.substr(n, 2), 16));\n    }\n    return asciiStr;\n  }\n\n  ngOnInit() {\n  }\n  // add back when alpha.4 is out\n  // navigate(item) {\n  //   this.router.navigate(['/list', JSON.stringify(item)]);\n  // }\n}\n"],"sourceRoot":""}